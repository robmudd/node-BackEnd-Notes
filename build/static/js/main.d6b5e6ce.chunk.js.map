{"version":3,"sources":["components/Note.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","props","noteClass","note","important","buttonLabel","className","content","toString","onClick","toggleImportance","baseUrl","methods","getAll","request","axios","get","console","log","then","response","data","create","newObject","post","update","id","put","Footer","style","color","fontSize","fontStyle","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","x","oldNote","find","n","moddedNote","modded","onSubmit","event","preventDefault","target","length","noteObject","Math","random","newNoteToAdd","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"iNAaeA,EAXF,SAACC,GACV,IAAMC,EAAYD,EAAME,KAAKC,UAAY,gBAAkB,mBAErDC,EAAcJ,EAAME,KAAKC,UAAY,qBAAuB,iBAClE,OACI,qBAAIE,UAAWJ,EAAf,UAA2BD,EAAME,KAAKI,QAAtC,OAAkD,4BAAIN,EAAME,KAAKC,UAAUI,aAC3E,wBAAQC,QAASR,EAAMS,iBAAvB,SAA0CL,Q,gBCN5CM,EAAU,kCAsBDC,EAFC,CAACC,OAlBF,WAEX,IAAMC,EAAUC,IAAMC,IAAIL,GAE1B,OADAM,QAAQC,IAAIP,GACLG,EAAQK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAcpBC,OAXV,SAAAC,GACX,IAAMT,EAAUC,IAAMS,KAAKb,EAASY,GAEpC,OADAN,QAAQC,IAAI,gBAAiBK,GACtBT,EAAQK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQZI,OALlB,SAACC,EAAIH,GAEhB,OADgBR,IAAMY,IAAN,UAAchB,EAAd,YAAyBe,GAAMH,GAChCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCD9BO,EAhBA,WAQX,OACI,sBAAKC,MAPW,CAChBC,MAAO,OACPC,SAAU,GACVC,UAAW,UAIX,UACI,uBAAK,uBACL,0DAA4B,uCAA5B,mCC+DGC,MAtEf,WAEI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAWAC,qBATa,WACTC,EACK7B,SACAM,MAAK,SAAAwB,GACF1B,QAAQC,IAAI,aAAcyB,GAC1BP,EAASO,QAIL,IAEhB,IAkCMC,EAAcL,EAAUJ,EAAQA,EAAMU,QAAO,SAAA1C,GAAI,OAAuB,IAAnBA,EAAKC,aAEhE,OAEI,gCACI,2CACA,6BACKwC,EAAYE,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMrC,iBAAkB,kBAnBjC,SAACgB,GACtB,IAAMsB,EAAUb,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAOA,KACnCyB,EAAU,2BAAOH,GAAP,IAAgB5C,WAAY4C,EAAQ5C,YAEpDsC,EACKjB,OAAOC,EAAIyB,GACXhC,MAAK,SAAAiC,GAAM,OACRhB,EACID,EAAMW,KAAI,SAAAC,GAAC,OAAIA,EAAErB,KAAOA,EAAKqB,EAAIK,SAWe1C,CAAiBqC,EAAErB,KAAKvB,KAAM4C,GAAQA,EAAErB,SAEhG,uBAAM2B,SA3CE,SAACC,GACbA,EAAMC,iBACNtC,QAAQC,IAAI,aAAcoC,EAAME,QAChCvC,QAAQC,IAAIiB,EAAMsB,QAClB,IAAMC,EAAa,CACfnD,QAAS8B,EACTjC,UAAWuD,KAAKC,SAAW,IAG/BlB,EACKpB,OAAOoC,GACPvC,MAAK,SAAA0C,GACFzB,EAASD,EAAM2B,OAAOD,IACtBvB,EAAW,QA8Bf,UACI,uBAAOyB,MAAO1B,EAAS2B,SA3BV,SAACV,GACtBrC,QAAQC,IAAIoC,EAAME,OAAOO,OACzBzB,EAAWgB,EAAME,OAAOO,UA0BhB,wBAAQE,KAAK,SAAb,qBAEJ,yBAAQxD,QAAS,kBAAM+B,GAAYD,IAAnC,kBAAmDA,EAAU,YAAc,SAC3E,cAAC,EAAD,QC9DZ2B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6b5e6ce.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = (props) => {\n    const noteClass = props.note.important ? \"importantNote\" : \"nonImportantNote\"\n    \n    const buttonLabel = props.note.important ? \"make not important\" : \"make important\"\n    return (\n        <li className={noteClass}>{props.note.content} is <b>{props.note.important.toString()}</b>\n        <button onClick={props.toggleImportance}>{buttonLabel}</button>\n        </li>\n    )\n}\n\nexport default Note","import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/api/notes\"\n\nconst getAll = () => {\n    \n    const request = axios.get(baseUrl)\n    console.log(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    console.log('new object is', newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put (`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst methods = {getAll, create, update}\n\nexport default methods","import React from \"react\";\n\nconst Footer = () => {\n    \n    const footerStyle = {\n        color: \"blue\",\n        fontSize: 12,\n        fontStyle: \"italic\"\n    }\n    \n    return(\n        <div style={footerStyle}>\n            <br/><br/>\n            <em>NotesApp was created by <b>rpMudd</b> for educational purposes</em>\n        </div>\n    )\n}\n\nexport default Footer","import './App.css';\nimport Note from './components/Note'\nimport React, {useState, useEffect} from 'react'\nimport noteService from './services/notes'\nimport Footer from './components/Footer'\n\nfunction App() {\n    \n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    \n    const hook = () => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                console.log(\"init notes\", initialNotes)\n                setNotes(initialNotes)}\n            )\n    \n    }\n    useEffect(hook, [])\n    \n    const addNote = (event) => {\n        event.preventDefault()\n        console.log(\"note added\", event.target)\n        console.log(notes.length)\n        const noteObject = {\n            content: newNote,\n            important: Math.random() > .5\n        }\n        \n        noteService\n            .create(noteObject)\n            .then(newNoteToAdd => {\n                setNotes(notes.concat(newNoteToAdd))\n                setNewNote('')\n            })\n    }\n    \n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n    \n    const toggleImportance = (id) => {\n        const oldNote = notes.find(n => n.id === id)\n        const moddedNote = {...oldNote, important: !oldNote.important}\n        \n        noteService\n            .update(id, moddedNote)\n            .then(modded =>\n                setNotes(\n                    notes.map(x => x.id !== id ? x : modded)\n                ))\n    }\n    \n    const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n    \n    return (\n        \n        <div>\n            <h1>My Notes:</h1>\n            <ul>\n                {notesToShow.map(x => <Note toggleImportance={() => toggleImportance(x.id)} note={x} key={x.id}/>)}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange}/>\n                <button type=\"submit\">save</button>\n            </form>\n            <button onClick={() => setShowAll(!showAll)}>Show {showAll ? \"important\" : \"all\"}</button>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\nReactDOM.render(\n\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}